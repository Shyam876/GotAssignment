{"ast":null,"code":"var _jsxFileName = \"/Users/shyamsawant/Desktop/gotfrontend/src/components/FamilyTreeComponent/index.js\";\nimport { Box, Flex } from '@chakra-ui/react';\nimport React from 'react';\nimport ArrowDomComponent from '../ArrowDomComponent';\nimport { ArcherContainer, ArcherElement } from \"react-archer\";\nimport Queue from \"../../libraries/Queue\";\nimport CardComponent from '../CardComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst rootStyle = {\n  margin: \"20px 0px\",\n  display: \"flex\",\n  justifyContent: \"center\"\n};\nconst rowStyle = {\n  margin: \"100px 0\",\n  display: \"flex\",\n  justifyContent: \"space-between\"\n};\nconst boxStyle = {\n  padding: \"10px\",\n  border: \"1px solid black\",\n  display: \"flex\",\n  justifyContent: \"space-between\"\n};\nconst constructTargetObjects = data => {\n  var targetObjects = [];\n  data.children.map((element, i) => targetObjects.push({\n    targetId: element.characterName,\n    targetAnchor: \"top\",\n    sourceAnchor: \"bottom\",\n    style: {\n      strokeDasharray: \"5,5\"\n    }\n  }));\n  data.spouse.map((element, i) => targetObjects.push({\n    targetId: element.characterName,\n    targetAnchor: \"left\",\n    sourceAnchor: \"right\",\n    style: {\n      strokeColor: \"blue\",\n      strokeWidth: 1\n    }\n  }));\n  return targetObjects;\n};\nconst constructTree = props => {\n  let headNode = props.data;\n  let q = new Queue();\n  var treeTraversed = [];\n  q.enqueue(headNode);\n  headNode.spouse.map((node, i) => headNode.enqueue(node));\n  q.enqueue(null);\n  var level = 1;\n  while (!q.isEmpty() && q.peek() != null) {\n    let currentLevelNodes = [];\n    let currentNode = q.dequeue();\n    while (currentNode != null) {\n      currentLevelNodes.push({\n        node: currentNode,\n        mapping: constructTargetObjects(currentNode)\n      });\n      currentNode.children.map((node, i) => {\n        q.enqueue(node);\n        node.spouse.map((spouseNode, i) => q.enqueue(spouseNode));\n      });\n      currentNode = q.dequeue();\n    }\n    q.enqueue(null);\n    level = level + 1;\n    treeTraversed.push(currentLevelNodes);\n  }\n  return /*#__PURE__*/_jsxDEV(ArcherContainer, {\n    strokeColor: \"red\",\n    children: treeTraversed.map((levelTraversed, i) => i == 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: rootStyle,\n      children: levelTraversed.map((nodeObject, i) => /*#__PURE__*/_jsxDEV(ArcherElement, {\n        id: nodeObject.node.characterName,\n        relations: nodeObject.mapping,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: boxStyle,\n          children: nodeObject.node.characterName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 29\n        }, this)\n      }, nodeObject.node.characterName, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: rowStyle,\n      children: levelTraversed.map((nodeObject, i) => /*#__PURE__*/_jsxDEV(ArcherElement, {\n        id: nodeObject.node.characterName,\n        relations: nodeObject.mapping,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          children: [\" \", /*#__PURE__*/_jsxDEV(CardComponent, {\n            element: nodeObject.node,\n            fetchFamilyTreeData: props.fetchFamilyTreeData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 35\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 29\n        }, this)\n      }, nodeObject.node.characterName, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\nfunction FamilyTreeComponent(props) {\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    minWidth: \"max-content\",\n    alignItems: \"center\",\n    gap: \"2\",\n    children: constructTree(props)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n}\n_c = FamilyTreeComponent;\nexport default FamilyTreeComponent;\nvar _c;\n$RefreshReg$(_c, \"FamilyTreeComponent\");","map":{"version":3,"names":["Box","Flex","React","ArrowDomComponent","ArcherContainer","ArcherElement","Queue","CardComponent","jsxDEV","_jsxDEV","rootStyle","margin","display","justifyContent","rowStyle","boxStyle","padding","border","constructTargetObjects","data","targetObjects","children","map","element","i","push","targetId","characterName","targetAnchor","sourceAnchor","style","strokeDasharray","spouse","strokeColor","strokeWidth","constructTree","props","headNode","q","treeTraversed","enqueue","node","level","isEmpty","peek","currentLevelNodes","currentNode","dequeue","mapping","spouseNode","levelTraversed","nodeObject","id","relations","fileName","_jsxFileName","lineNumber","columnNumber","fetchFamilyTreeData","FamilyTreeComponent","minWidth","alignItems","gap","_c","$RefreshReg$"],"sources":["/Users/shyamsawant/Desktop/gotfrontend/src/components/FamilyTreeComponent/index.js"],"sourcesContent":["import { Box, Flex } from '@chakra-ui/react'\nimport React from 'react'\nimport ArrowDomComponent from '../ArrowDomComponent'\nimport { ArcherContainer, ArcherElement } from \"react-archer\";\nimport Queue from \"../../libraries/Queue\"\nimport CardComponent from '../CardComponent'\n\n\nconst rootStyle = { margin: \"20px 0px\", display: \"flex\", justifyContent: \"center\" };\nconst rowStyle = {\n    margin: \"100px 0\",\n    display: \"flex\",\n    justifyContent: \"space-between\"\n};\n\nconst boxStyle = { padding: \"10px\", border: \"1px solid black\", display: \"flex\", justifyContent: \"space-between\" };\n\nconst constructTargetObjects = (data) => {\n    var targetObjects = [];\n    data.children.map((element, i) => targetObjects.push({ targetId : element.characterName, targetAnchor: \"top\", sourceAnchor: \"bottom\", style: { strokeDasharray: \"5,5\" }}))\n    data.spouse.map((element, i) => targetObjects.push({ targetId : element.characterName, targetAnchor: \"left\", sourceAnchor: \"right\", style: { strokeColor: \"blue\", strokeWidth: 1 }}))\n    \n    return targetObjects;\n}\n\n\nconst constructTree = (props) => {\n\n    let headNode = props.data\n    let q = new Queue();\n\n    var treeTraversed = []\n    q.enqueue(headNode)\n    headNode.spouse.map((node, i) => headNode.enqueue(node));\n    q.enqueue(null);\n    var level = 1;\n    while(!q.isEmpty() && q.peek()!=null){\n\n        let currentLevelNodes = []\n        let currentNode = q.dequeue();\n\n        while(currentNode!=null){\n\n            currentLevelNodes.push({ node: currentNode, mapping: constructTargetObjects(currentNode)})\n\n            currentNode.children.map((node, i) => {\n                q.enqueue(node)\n                node.spouse.map((spouseNode, i) => q.enqueue(spouseNode))\n            })\n\n            currentNode = q.dequeue();\n\n        }\n\n        q.enqueue(null);\n        level = level+1;\n        treeTraversed.push(currentLevelNodes)\n        \n\n    }\n\n    return (\n        <ArcherContainer strokeColor=\"red\">\n            \n            {\n                \n\n\n                treeTraversed.map((levelTraversed, i) => (\n\n                    i==0 ? \n\n                    <div style={rootStyle}>\n                    {levelTraversed.map((nodeObject, i)=> (\n                        <ArcherElement\n                        id={nodeObject.node.characterName}\n                        key={nodeObject.node.characterName}\n                        relations={nodeObject.mapping}\n                        \n                        >\n                            <div style={boxStyle}>{nodeObject.node.characterName}</div>\n                        </ArcherElement>\n                    ))}\n                    </div>\n\n                    : \n\n                    <div style={rowStyle}>\n                    {levelTraversed.map((nodeObject, i)=> (\n                        <ArcherElement\n                        id={nodeObject.node.characterName}\n                        key={nodeObject.node.characterName}\n                        relations={nodeObject.mapping}\n                        \n                        >\n                            {/*<div style={boxStyle}>{nodeObject.node.characterName} <img src={filledHeart} alt=\"hollowHeart\" height={20} width={20} style={{marginLeft : 10}}/></div>*/}\n                            <Box> <CardComponent element={nodeObject.node} fetchFamilyTreeData={props.fetchFamilyTreeData} /> </Box>\n                        </ArcherElement>\n                    ))}\n                    </div>\n                ))\n            }\n\n        </ArcherContainer>\n    )\n\n}\n\n\nfunction FamilyTreeComponent(props) {\n\n  return (\n    <Flex minWidth='max-content' alignItems='center' gap='2'>\n                {constructTree(props)}\n    </Flex>\n  )\n}\n\nexport default FamilyTreeComponent"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}