{"ast":null,"code":"var _jsxFileName = \"/Users/shyamsawant/Desktop/gotfrontend/src/components/ArrowDomComponent/index.js\";\nimport { ArcherContainer, ArcherElement } from \"react-archer\";\nimport data from \"../FamilyTreeComponent/response.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst rootStyle = {\n  display: \"flex\",\n  justifyContent: \"center\"\n};\nconst rowStyle = {\n  margin: \"200px 0\",\n  display: \"flex\",\n  justifyContent: \"space-between\"\n};\nconst boxStyle = {\n  padding: \"10px\",\n  border: \"1px solid black\"\n};\nconst constructTargetObjects = data => {\n  var targetObjects = [];\n  data.children.map((element, i) => targetObjects.push({\n    targetId: element.characterName,\n    targetAnchor: \"top\",\n    sourceAnchor: \"bottom\",\n    style: {\n      strokeDasharray: \"5,5\"\n    }\n  }));\n  data.spouse.map((element, i) => targetObjects.push({\n    targetId: element.characterName,\n    targetAnchor: \"left\",\n    sourceAnchor: \"right\",\n    style: {\n      strokeColor: \"blue\",\n      strokeWidth: 1\n    }\n  }));\n  return targetObjects;\n};\nconst constructTree = data => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: rootStyle,\n      children: [/*#__PURE__*/_jsxDEV(ArcherElement, {\n        id: data.characterName,\n        relations: constructTargetObjects(data),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: boxStyle,\n          children: data.characterName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this)\n      }, data.characterName, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }, this), data.spouse.map((element, i) => /*#__PURE__*/_jsxDEV(ArcherElement, {\n        id: data.characterName,\n        relations: constructTargetObjects(element),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: boxStyle,\n          children: element.characterName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 33\n        }, this)\n      }, data.characterName, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 29\n      }, this))]\n    }, data.characterName, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: rowStyle,\n      children: data.children.map((element, i) => constructTree(element))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: \"500px\",\n      margin: \"50px\",\n      width: \"2000px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(ArcherContainer, {\n      strokeColor: \"red\",\n      children: constructTree(data)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["ArcherContainer","ArcherElement","data","jsxDEV","_jsxDEV","rootStyle","display","justifyContent","rowStyle","margin","boxStyle","padding","border","constructTargetObjects","targetObjects","children","map","element","i","push","targetId","characterName","targetAnchor","sourceAnchor","style","strokeDasharray","spouse","strokeColor","strokeWidth","constructTree","id","relations","fileName","_jsxFileName","lineNumber","columnNumber","App","height","width","_c","$RefreshReg$"],"sources":["/Users/shyamsawant/Desktop/gotfrontend/src/components/ArrowDomComponent/index.js"],"sourcesContent":["import { ArcherContainer, ArcherElement } from \"react-archer\";\nimport data from \"../FamilyTreeComponent/response.json\";\n\nconst rootStyle = { display: \"flex\", justifyContent: \"center\" };\nconst rowStyle = {\n    margin: \"200px 0\",\n    display: \"flex\",\n    justifyContent: \"space-between\"\n};\n\nconst boxStyle = { padding: \"10px\", border: \"1px solid black\" };\n\nconst constructTargetObjects = (data) => {\n    var targetObjects = [];\n    data.children.map((element, i) => targetObjects.push({ targetId : element.characterName, targetAnchor: \"top\", sourceAnchor: \"bottom\", style: { strokeDasharray: \"5,5\" }}))\n    data.spouse.map((element, i) => targetObjects.push({ targetId : element.characterName, targetAnchor: \"left\", sourceAnchor: \"right\", style: { strokeColor: \"blue\", strokeWidth: 1 }}))\n    \n    return targetObjects;\n} \n\nconst constructTree = (data) => {\n\n    return(\n        <div>\n            <div key={data.characterName} style={rootStyle}>\n\n                    <ArcherElement\n                        id={data.characterName}\n                        key={data.characterName}\n                        relations={constructTargetObjects(data)}\n                        \n                    >\n                        <div style={boxStyle}>{data.characterName}</div>\n                    </ArcherElement>\n                    {\n                        data.spouse.map((element, i) => (\n                            <ArcherElement\n                                id={data.characterName}\n                                key={data.characterName}\n                                relations={constructTargetObjects(element)}\n                                \n                            >\n                                <div style={boxStyle}>{element.characterName}</div>\n                            </ArcherElement>\n                        ))\n                    }\n                \n            </div>\n            <div style={rowStyle}>\n                {\n                    data.children.map((element, i) => (\n                        constructTree(element)\n                    ))\n                }\n            </div>\n        </div>\n    )\n\n}\n\nconst App = () => {\n    return (\n        <div style={{ height: \"500px\", margin: \"50px\", width: \"2000px\" }}>\n            <ArcherContainer strokeColor=\"red\">\n               {/*  <div style={rootStyle}>\n                    <ArcherElement\n                        id=\"root\"\n                        relations={[\n                            {\n                                targetId: \"element2\",\n                                targetAnchor: \"top\",\n                                sourceAnchor: \"bottom\",\n                                style: { strokeDasharray: \"5,5\" },\n                            },\n                        ]}\n                    >\n                        <div style={boxStyle}>Root</div>\n                    </ArcherElement>\n                </div>\n                <div style={rowStyle}>\n                    <ArcherElement\n                        id=\"element2\"\n                        relations={[\n                            {\n                                targetId: \"element3\",\n                                targetAnchor: \"left\",\n                                sourceAnchor: \"right\",\n                                style: { strokeColor: \"blue\", strokeWidth: 1 },\n                                label: <div style={{ marginTop: \"-20px\" }}>Arrow 2</div>,\n                            },\n                        ]}\n                    >\n                        <div style={boxStyle}>Element 2</div>\n                    </ArcherElement>\n                    <ArcherElement id=\"element3\">\n                        <div style={boxStyle}>Element 3</div>\n                    </ArcherElement>\n\n                    <ArcherElement\n                        id=\"element4\"\n                        relations={[\n                            {\n                                targetId: \"root\",\n                                targetAnchor: \"right\",\n                                sourceAnchor: \"left\",\n                                label: \"Arrow 3\",\n                            },\n                        ]}\n                    >\n                        <div style={boxStyle}>Element 4</div>\n                    </ArcherElement>\n                </div> */}\n                {constructTree(data)}\n            </ArcherContainer>\n        </div>\n    );\n};\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}