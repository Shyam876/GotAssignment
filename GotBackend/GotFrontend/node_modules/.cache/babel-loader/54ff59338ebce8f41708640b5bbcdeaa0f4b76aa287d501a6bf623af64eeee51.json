{"ast":null,"code":"var _jsxFileName = \"/Users/shyamsawant/Desktop/gotfrontend/src/components/CardComponent/index.js\";\nimport { Box, Card, Heading, StackDivider, Text, Stack, Center } from '@chakra-ui/react';\nimport React from 'react';\nimport hollowHeart from '../../assets/hollow_heart.png';\nimport filledHeart from '../../assets/filled_heart.png';\nimport { GetRequests } from '../../util/ApiUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CardComponent(props) {\n  const toggleFavorite = id => {\n    GetRequests(\"/api/characters/\" + id + \"/favorite\").then(response => {\n      if (response.status == \"success\") props.fetchFamilyTreeData();\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    maxWidth: \"200px\",\n    maxHeight: \"300px\",\n    alignContent: \"center\",\n    padding: 5,\n    overflowY: \"auto\",\n    marginX: \"50px\",\n    css: {\n      '&::-webkit-scrollbar': {\n        width: '4px'\n      },\n      '&::-webkit-scrollbar-track': {\n        width: '6px'\n      },\n      '&::-webkit-scrollbar-thumb': {\n        scrollbarColor: 'red green',\n        borderRadius: '24px'\n      }\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      style: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        flexDirection: 'row'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        size: \"xs\",\n        children: props.element.node.characterName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: props.element.favorite == false ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: hollowHeart,\n          alt: \"hollowHeart\",\n          height: 20,\n          width: 20,\n          style: {\n            marginLeft: 10\n          },\n          onClick: () => toggleFavorite(props.element.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n          src: filledHeart,\n          alt: \"filled\",\n          height: 20,\n          width: 20,\n          style: {\n            marginLeft: 10\n          },\n          onClick: () => toggleFavorite(props.element.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(Stack, {\n        divider: /*#__PURE__*/_jsxDEV(StackDivider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 33\n        }, this),\n        spacing: \"2\",\n        children: props.element.relations.map((relation, i) => {\n          /*#__PURE__*/_jsxDEV(Box, {\n            children: /*#__PURE__*/_jsxDEV(Text, {\n              pt: \"2\",\n              fontSize: \"sm\",\n              children: [relation.key, \" : \", relation.value]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n}\n_c = CardComponent;\nexport default CardComponent;\nvar _c;\n$RefreshReg$(_c, \"CardComponent\");","map":{"version":3,"names":["Box","Card","Heading","StackDivider","Text","Stack","Center","React","hollowHeart","filledHeart","GetRequests","jsxDEV","_jsxDEV","CardComponent","props","toggleFavorite","id","then","response","status","fetchFamilyTreeData","maxWidth","maxHeight","alignContent","padding","overflowY","marginX","css","width","scrollbarColor","borderRadius","children","style","display","justifyContent","flexDirection","size","element","node","characterName","fileName","_jsxFileName","lineNumber","columnNumber","favorite","src","alt","height","marginLeft","onClick","divider","spacing","relations","map","relation","i","pt","fontSize","key","value","_c","$RefreshReg$"],"sources":["/Users/shyamsawant/Desktop/gotfrontend/src/components/CardComponent/index.js"],"sourcesContent":["import { Box, Card, Heading, StackDivider, Text, Stack, Center } from '@chakra-ui/react'\nimport React from 'react'\nimport hollowHeart from '../../assets/hollow_heart.png'\nimport filledHeart from '../../assets/filled_heart.png'\nimport { GetRequests } from '../../util/ApiUtils'\nfunction CardComponent(props) {\n\n    const toggleFavorite = (id) => {\n        GetRequests(\"/api/characters/\"+id+\"/favorite\").then(response => {\n            if(response.status==\"success\")\n                props.fetchFamilyTreeData();\n        })\n    }\n\n    return (\n        <Card\n        maxWidth=\"200px\" maxHeight=\"300px\" alignContent='center' padding={5} \n        overflowY=\"auto\"  \n        marginX='50px'\n        css={{\n            '&::-webkit-scrollbar': {\n            width: '4px',\n            },\n            '&::-webkit-scrollbar-track': {\n            width: '6px',\n            },\n            '&::-webkit-scrollbar-thumb': {\n            scrollbarColor: 'red green',\n            borderRadius: '24px',\n            },\n        }} >\n            <Box style={{display: \"flex\", justifyContent: \"space-between\", flexDirection: 'row'}}>\n                <Heading size=\"xs\">{props.element.node.characterName}</Heading>\n                <Box>\n                { props.element.favorite == false ? \n                    <img src={hollowHeart} alt=\"hollowHeart\" height={20} width={20} style={{marginLeft : 10}} onClick={() => toggleFavorite(props.element.id)}/>\n                    :\n                    <img src={filledHeart} alt=\"filled\" height={20} width={20} style={{marginLeft : 10}} onClick={() => toggleFavorite(props.element.id)}/>\n                }\n                </Box>\n            </Box>\n\n            <Box>\n                <Stack divider={<StackDivider />} spacing='2'>\n\n                    {\n                        props.element.relations.map((relation, i) => {\n                            <Box>\n                                <Text pt='2' fontSize='sm'>\n                                    {relation.key} : {relation.value}\n                                </Text>\n                            </Box>\n                        })\n                    }\n\n                    {/* {props.element.parents.length>0 ?  : null}\n\n                    {props.element.siblings.length>0 ? <Box>\n                        <Text pt='2' fontSize='sm'>\n                            Siblings : {props.element.siblings.toString()}\n                        </Text>\n                    </Box> : null}\n\n                    {props.element.guardianOf.length>0 ? <Box>\n                        <Text pt='2' fontSize='sm'>\n                            Guardian of : {props.element.guardianOf.toString()}\n                        </Text>\n                    </Box> : null}\n\n                    {props.element.guardedBy.length>0 ? <Box>\n                        <Text pt='2' fontSize='sm'>\n                            Guarded by : {props.element.guardedBy.toString()}\n                        </Text>\n                    </Box> : null}\n\n                    {props.element.killed.length>0 ? <Box>\n                        <Text pt='2' fontSize='sm'>\n                            Killed : {props.element.killed.toString()}\n                        </Text>\n                    </Box> : null}\n\n                    {props.element.killedBy.length>0 ? <Box>\n                        <Text pt='2' fontSize='sm'>\n                            Killed by : {props.element.killedBy.toString()}\n                        </Text>\n                    </Box> : null} */}\n                    \n                </Stack>\n            </Box>\n        </Card>\n    )\n}\n\nexport default CardComponent"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}